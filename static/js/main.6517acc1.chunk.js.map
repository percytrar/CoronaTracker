{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","xs","Grid","spacing","justify","item","component","Card","md","cx","cards","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","duration","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6517acc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3C3gF\",\"infected\":\"Cards_infected__3ky5T\",\"recovered\":\"Cards_recovered__3M_5-\",\"deaths\":\"Cards_deaths__2UZj9\",\"cards\":\"Cards_cards__3hdto\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  if (!confirmed) return \"Loading....\";\r\n\r\n  return (\r\n    <div className={styles.container} xs={12}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.cards, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                separator=\",\"\r\n                duration={2.5}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Active Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.cards, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                separator=\",\"\r\n                duration={2.5}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Recovered Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.cards, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                separator=\",\"\r\n                duration={2.5}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Deaths</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) changeableUrl = `${url}/countries/${country}`\r\n  \r\n  try {\r\n    const {data:{confirmed, deaths, lastUpdate, recovered}} = await axios.get(changeableUrl);\r\n    return {confirmed, deaths, lastUpdate, recovered};\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData)=>({\r\n      confirmed:dailyData.confirmed.total,\r\n      deaths:dailyData.deaths.total,\r\n      date:dailyData.reportDate,      \r\n    }));      \r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data:{ countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\"#F4B400\", \"#0F9D58\", \"#DB4437\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries( await fetchCountries() );\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\nclass App extends React.Component {\r\n  state = {\r\n    data : {},\r\n    country : '',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({data:fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data:fetchedData, country:country});\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}> \r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"></img>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange =  {this.handleCountryChange} />\r\n        <Chart data={data} country={country} />        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1WpzK\",\"image\":\"App_image__tpLDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__16m02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__2XgFP\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}